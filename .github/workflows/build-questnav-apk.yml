name: Build QuestNav App
on:
  workflow_call:
    inputs:
      versionYear:
        description: 'Current FRC Year'
        required: false
        type: string
      versionMajor:
        description: 'Major version'
        required: false
        type: string
      versionMinor:
        description: 'Minor version'
        required: false
        type: string
      versionPatch:
        description: 'Patch version'
        required: false
        type: string
      versionType:
        description: 'Type of version'
        required: false
        type: string
    secrets:
      UNITY_LICENSE:
        description: 'Unity License'
        required: true
      UNITY_EMAIL:
        description: 'Unity Email'
        required: true
      UNITY_PASSWORD:
        description: 'Unity Password'
        required: true
    outputs:
      apk-artifact-name:
        description: "Name of the uploaded APK artifact"
        value: ${{ jobs.build-unity.outputs.apk-artifact-name }}
      apk-filename:
        description: "Filename of the built APK"
        value: ${{ jobs.build-unity.outputs.apk-filename }}

jobs:
  build-unity:
    runs-on: ubuntu-latest
    outputs:
      apk-artifact-name: ${{ steps.upload.outputs.artifact-id }}
      apk-filename: ${{ steps.version-info.outputs.version }}.apk
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          sparse-checkout: unity
          sparse-checkout-cone-mode: false
          lfs: true

      - name: Determine Version Strategy
        id: version-info
        run: |
          # Check if all required version components are provided
          if [ -n "${{ inputs.versionYear }}" ] && [ -n "${{ inputs.versionMajor }}" ] && [ -n "${{ inputs.versionMinor }}" ] && [ -n "${{ inputs.versionPatch }}" ]; then
            # Use semantic versioning
            VERSION="${{ inputs.versionYear }}.${{ inputs.versionMajor }}.${{ inputs.versionMinor }}.${{ inputs.versionPatch }}"
            if [ -n "${{ inputs.versionType }}" ]; then
              VERSION="${VERSION}-${{ inputs.versionType }}"
            fi

            # Calculate Android version code for semantic versioning
            YEAR=${{ inputs.versionYear }}
            MAJOR=${{ inputs.versionMajor }}
            MINOR=${{ inputs.versionMinor }}
            PATCH=${{ inputs.versionPatch }}
            VERSION_CODE=$(( ($YEAR - 2020) * 100000000 + $MAJOR * 1000000 + $MINOR * 1000 + $PATCH ))

            echo "strategy=semantic" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "version-code=$VERSION_CODE" >> $GITHUB_OUTPUT
          else
            # Use hash-based versioning - hash first, then dev suffix
            COMMIT_HASH=$(git rev-parse --short=7 HEAD)
            VERSION="$COMMIT_HASH-dev"

            # For hash-based versioning, use commit count for version code
            COMMIT_COUNT=$(git rev-list --count HEAD)
            VERSION_CODE=$((1000000 + $COMMIT_COUNT))

            echo "strategy=hash" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "version-code=$VERSION_CODE" >> $GITHUB_OUTPUT
          fi

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          android: false
          dotnet: false

      - name: Setup Caching
        uses: actions/cache@v3
        with:
          path: unity/Library
          key: Library-QuestNav-Android
          restore-keys: |
            Library-
            Library-Questnav-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install NuGetForUnity
        run: dotnet tool install --global NuGetForUnity.Cli

      - name: Restore NuGetForUnity Packages
        run: nugetforunity restore unity/

      - name: Build Unity Project for Android
        uses: game-ci/unity-builder@v4
        id: buildUnity
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_BATCH_MODE: "true"
        with:
          projectPath: unity
          targetPlatform: Android
          customParameters: -developmentBuild
          versioning: Custom
          version: ${{ steps.version-info.outputs.version }}
          androidVersionCode: ${{ steps.version-info.outputs.version-code }}

      - name: Preserve XML Documentation
        run: |
          echo "Preserving XML documentation file for DocFX..."
          
          # Check if XML documentation was generated
          if [ -f "unity/Library/ScriptAssemblies/QuestNav.xml" ]; then
            echo "Found QuestNav.xml, copying to persistent location..."
            
            # Create directory for preserved documentation
            mkdir -p unity/DocFX/preserved-xml/
            
            # Copy the XML file to a location that won't be cleaned up
            cp unity/Library/ScriptAssemblies/QuestNav.xml unity/DocFX/preserved-xml/QuestNav.xml
            
            echo "XML documentation preserved at unity/DocFX/preserved-xml/QuestNav.xml"
            ls -la unity/DocFX/preserved-xml/
          else
            echo "Warning: QuestNav.xml not found at unity/Library/ScriptAssemblies/QuestNav.xml"
            echo "Available files in ScriptAssemblies:"
            ls -la unity/Library/ScriptAssemblies/ | grep -E "\.(xml|dll)$" || echo "No XML or DLL files found"
          fi

      - name: Upload XML Documentation Artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: questnav-xml-docs-${{ steps.version-info.outputs.version }}
          path: unity/DocFX/preserved-xml/QuestNav.xml
          retention-days: 30

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: questnav-apk-${{ steps.version-info.outputs.version }}
          path: build/Android/*.apk
          retention-days: 7