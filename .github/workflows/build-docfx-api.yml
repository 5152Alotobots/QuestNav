name: Build DocFX API Documentation

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'unity/Assets/QuestNav/**/*.cs'  # Trigger on C# source changes
      - 'unity/DocFX/**'  # Trigger on DocFX config changes
      - 'unity/QuestNav.csproj'  # Trigger on project file changes
  pull_request:
    branches:
      - main
    paths:
      - 'unity/Assets/QuestNav/**/*.cs'
      - 'unity/DocFX/**'
      - 'unity/QuestNav.csproj'

concurrency:
  group: build-docfx-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docfx:
    name: Build C# API Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to commit generated docs back to repo
      pull-requests: write  # Required for PR comments

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper git operations
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install DocFX
        run: dotnet tool install -g docfx

      - name: Setup Unity Project Dependencies
        run: |
          # Install NuGetForUnity CLI for package restoration
          dotnet tool install --global NuGetForUnity.Cli
          
      - name: Restore NuGet Packages
        run: |
          # Restore Unity NuGet packages
          nugetforunity restore unity/
        continue-on-error: true  # Don't fail if some packages can't be restored

      - name: Check for Preserved XML Documentation
        id: check-xml
        run: |
          # Check if we have preserved XML documentation from a previous Unity build
          if [ -f "unity/DocFX/preserved-xml/QuestNav.xml" ]; then
            echo "Found preserved XML documentation"
            echo "xml-available=true" >> $GITHUB_OUTPUT
            
            # Copy it to the expected location for DocFX
            mkdir -p unity/Library/ScriptAssemblies/
            cp unity/DocFX/preserved-xml/QuestNav.xml unity/Library/ScriptAssemblies/QuestNav.xml
            
            echo "XML documentation restored to unity/Library/ScriptAssemblies/QuestNav.xml"
          else
            echo "No preserved XML documentation found"
            echo "xml-available=false" >> $GITHUB_OUTPUT
            
            # Check if XML exists in the normal location
            if [ -f "unity/Library/ScriptAssemblies/QuestNav.xml" ]; then
              echo "Found XML in normal location"
              echo "xml-available=true" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Cache DocFX Build
        uses: actions/cache@v4
        with:
          path: |
            unity/DocFX/api/
            unity/DocFX/obj/
          key: docfx-${{ runner.os }}-${{ hashFiles('unity/DocFX/docfx.json', 'unity/QuestNav.csproj') }}
          restore-keys: |
            docfx-${{ runner.os }}-

      - name: Generate API Metadata
        if: steps.check-xml.outputs.xml-available == 'true'
        working-directory: unity/DocFX
        run: |
          echo "Generating DocFX metadata from C# project..."
          docfx metadata --logLevel Verbose
        continue-on-error: false

      - name: Build DocFX Documentation
        if: steps.check-xml.outputs.xml-available == 'true'
        working-directory: unity/DocFX
        run: |
          echo "Building DocFX documentation site..."
          docfx build --logLevel Verbose
        continue-on-error: false

      - name: Skip DocFX Build
        if: steps.check-xml.outputs.xml-available == 'false'
        run: |
          echo "Skipping DocFX build - no XML documentation available"
          echo "To generate XML documentation:"
          echo "1. Ensure XML documentation comments are present in C# source files"
          echo "2. Run a Unity build to generate QuestNav.xml"
          echo "3. The XML file will be preserved and used for API documentation"

      - name: Verify Generated Files
        if: steps.check-xml.outputs.xml-available == 'true'
        run: |
          echo "Verifying DocFX output..."
          ls -la docs/static/api/csharp/
          echo "API files count:"
          find docs/static/api/csharp/api/ -name "*.html" | wc -l
          echo "Main index file:"
          ls -la docs/static/api/csharp/index.html

      - name: Check for Changes
        if: steps.check-xml.outputs.xml-available == 'true'
        id: changes
        run: |
          # Check if there are any changes to commit
          if git diff --quiet docs/static/api/csharp/; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in DocFX output"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in DocFX output"
            git diff --stat docs/static/api/csharp/
          fi

      - name: Commit Updated Documentation
        if: steps.check-xml.outputs.xml-available == 'true' && steps.changes.outputs.changed == 'true' && github.event_name == 'push'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'docs: Update C# API documentation via DocFX'
          file_pattern: 'docs/static/api/csharp/**'
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Upload DocFX Artifacts
        if: steps.check-xml.outputs.xml-available == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: docfx-api-docs-${{ github.run_id }}
          path: docs/static/api/csharp/
          retention-days: 30

      - name: Comment on PR
        if: steps.check-xml.outputs.xml-available == 'true' && github.event_name == 'pull_request' && steps.changes.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Count generated files
            const apiDir = 'docs/static/api/csharp/api/';
            const files = fs.readdirSync(apiDir).filter(f => f.endsWith('.html'));
            
            const comment = `## DocFX API Documentation Updated
            
            The C# API documentation has been regenerated with your changes:
            
            - **Generated Files**: ${files.length} HTML pages
            - **Namespaces Covered**: QuestNav.Core, QuestNav.Commands, QuestNav.Network, QuestNav.UI, QuestNav.Utils, QuestNav.Native.NTCore, QuestNav.Protos.Generated
            - **Preview**: The updated docs will be available at \`/api/csharp/\` once deployed
            
            ### Key Changes
            - Updated API reference from XML documentation comments
            - Regenerated cross-references and search index
            - Updated namespace and type documentation
            
            The documentation will be automatically deployed with your Docusaurus site.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Optional: Trigger Docusaurus deployment if DocFX docs changed
  trigger-docs-deploy:
    name: Trigger Documentation Deployment
    needs: build-docfx
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Trigger Docusaurus Deployment
        uses: actions/github-script@v7
        with:
          script: |
            // Trigger the Docusaurus deployment workflow
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-docusaurus.yml',
              ref: 'main'
            });
            
            console.log('Triggered Docusaurus deployment workflow');
